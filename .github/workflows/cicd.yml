name: CICD

on:
  push:
    branches: [ production ]

jobs:
  build:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
#      - name: Configure GitHub Packages credentials
#        run: |
#          mkdir -p ~/.m2
#          echo "<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.xsd\"><servers><server><id>github</id><username>devthiagoramon</username><password>${{ secrets.GITHUB_TOKEN }}</password></server></servers><profiles><profile><id>github</id><repositories><repository><id>github</id><url>https://maven.pkg.github.com/devthiagoramon/tdlib-java</url></repository></repositories></profile></profiles></settings>" > ~/.m2/settings.xml
      - name: Install TDLib manually
        run: |
            mvn install:install-file \
              -Dfile=src/main/resources/tdlib.jar \
              -DgroupId=com.telegram \
              -DartifactId=tdlib \
              -Dversion=1.0 \
              -Dpackaging=jar
      - name: Build project
        run: mvn clean install -DskipTests
      - name: Login to docker hub
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
      - name: Build docker image
        run: docker build -t thiagoramon/hallel-api-production .
      - name: Publish image to Docker hub
        run: docker push thiagoramon/hallel-api-production:latest

  deploy:
    needs: build
    runs-on: [ aws-ec2 ]
    steps:
      - name: Install Docker (if not installed)
        run: |
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo systemctl enable --now docker
      - name: Pull image from docker hub
        run: sudo docker pull thiagoramon/hallel-api-production:latest
      - name: Delete old container
        run: sudo docker rm -f hallel-api-production-container
      - name: Run docker container
        run: sudo docker run -d -p 8080:8080 --name hallel-api-production-container thiagoramon/hallel-api-production:latest

